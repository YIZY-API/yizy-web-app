// This file is auto generated by YIZY API, do not modify.
// Instead, update your API specification and upload it to yizy.dev/demo to regenerate this file!
export interface YizyError {
  code: number;
  msg: string;
}

export interface CreateSpecResult {
  name: string;
  id: string;
}

export interface UpdateSpecResult {
  content: string;
  versionNumber: number;
  prevSnapshotId: string;
}

export interface SpecIdAndName {
  id: string;
  name: string;
}

export interface GetSpecsResult {
  resultset: SpecIdAndName[];
}

export interface SpecificationSnapshot {
  content: string;
  versionNumber: string;
  name: string;
  snapshotId: string;
}

export interface CreateSpecRequest {
  name: string;
  creatorUserId: string;
}

export interface CreateSpecResponse {
  error: YizyError | null;
  result: CreateSpecResult | null;
}

export interface UpdateSpecRequest {
  specId: string;
  prevSpecSnapshotId: string;
  content: string;
  updatorUserId: string;
}

export interface UpdateSpecResponse {
  error: YizyError | null;
  result: UpdateSpecResult | null;
}

export interface GetSpecsRequest {
  userId: string;
}

export interface GetSpecsResponse {
  error: YizyError | null;
  result: GetSpecsResult;
}

export interface GetLatestSpecByIdRequest {
  id: string;
}

export interface GetLatestSpecByIdResponse {
  error: YizyError | null;
  result: SpecificationSnapshot | null;
}

export async function createSpec(
  req: CreateSpecRequest,
  headers?: Record<string, string>,
): Promise<CreateSpecResponse> {
  let defaultHeaders = {
    "Content-Type": "application/json",
  };

  if (headers) {
    defaultHeaders = { ...defaultHeaders, ...headers };
  }

  const response = await fetch("http://localhost:5173/api/spec/createSpec", {
    method: "POST",
    headers: defaultHeaders,
    body: JSON.stringify(req),
  });

  const result: CreateSpecResponse = await response.json();
  return result;
}

export async function updateSpec(
  req: UpdateSpecRequest,
  headers?: Record<string, string>,
): Promise<UpdateSpecResponse> {
  let defaultHeaders = {
    "Content-Type": "application/json",
  };

  if (headers) {
    defaultHeaders = { ...defaultHeaders, ...headers };
  }

  const response = await fetch("http://localhost:5173/api/spec/updateSpec", {
    method: "POST",
    headers: defaultHeaders,
    body: JSON.stringify(req),
  });

  const result: UpdateSpecResponse = await response.json();
  return result;
}

export async function getSpecs(
  req: GetSpecsRequest,
  headers?: Record<string, string>,
): Promise<GetSpecsResponse> {
  let defaultHeaders = {
    "Content-Type": "application/json",
  };

  if (headers) {
    defaultHeaders = { ...defaultHeaders, ...headers };
  }

  const response = await fetch("http://localhost:5173/api/specs/getSpecs", {
    method: "POST",
    headers: defaultHeaders,
    body: JSON.stringify(req),
  });

  const result: GetSpecsResponse = await response.json();
  return result;
}

export async function getLatestSpecById(
  req: GetLatestSpecByIdRequest,
  headers?: Record<string, string>,
): Promise<GetLatestSpecByIdResponse> {
  let defaultHeaders = {
    "Content-Type": "application/json",
  };

  if (headers) {
    defaultHeaders = { ...defaultHeaders, ...headers };
  }

  const response = await fetch(
    "http://localhost:5173/api/specs/getLatestSpecById",
    {
      method: "POST",
      headers: defaultHeaders,
      body: JSON.stringify(req),
    },
  );

  const result: GetLatestSpecByIdResponse = await response.json();
  return result;
}
